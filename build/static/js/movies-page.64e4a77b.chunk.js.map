{"version":3,"sources":["service/home-app.js","StatusError/StatusError.js","views/HomePage/HomePage.module.css","views/PartOfCard/PartOfCard.js","views/PartOfCard/PartOfCard.module.css","views/Searchbar/Searchbar.module.css","views/Searchbar/Searchbar.js","views/MoviesPage.js"],"names":["KEY","BASE_URL","fetchMoviesSearch","name","fetch","then","response","ok","json","fetchMoviesHomePage","fetchMoviesInfo","movie_id","fetchActorsInfo","fetchReviews","StatusError","message","role","module","exports","PartOfCard","string","id","title","backdrop","url","useRouteMatch","location","useLocation","className","s","ImageGalleryItem","link","to","pathname","slugify","lower","state","from","ImageGalleryItemImage","src","alt","text","Searchbar","getMovies","useState","movies","setMovies","history","useHistory","SearchForm","onSubmit","e","query","preventDefault","trim","push","search","toast","warn","SearchFormInput","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","SearchFormButton","style","marginRight","MoviesPage","URLSearchParams","get","querySearchParams","setQuery","error","setError","status","setStatus","useEffect","moviesAPI","newMovies","results","length","catch","textAlign","Loader","ItemList","map","movie","backdrop_path","autoClose"],"mappings":"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","file":"static/js/movies-page.64e4a77b.chunk.js","sourcesContent":["const KEY = '954177cd68586aaf37f7489ec26d1a8d';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport function fetchMoviesSearch(name) {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${name}&language=en-US&page=1&include_adult=false`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n}\n\nexport function fetchMoviesHomePage() {\n  return fetch(`${BASE_URL}/trending/movie/week?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    },\n  );\n}\n\nexport function fetchMoviesInfo(movie_id) {\n  return fetch(`${BASE_URL}/movie/${movie_id}?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    },\n  );\n}\n\nexport function fetchActorsInfo(movie_id) {\n  return fetch(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}&language=en-US`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n}\n\nexport function fetchReviews(movie_id) {\n  return fetch(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n}\n","import PropTypes from 'prop-types';\n\nexport default function StatusError({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>Oops, {message}</p>\n    </div>\n  );\n}\n\nStatusError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemList\":\"HomePage_ItemList__2nxLd\",\"ImageGalleryItem\":\"HomePage_ImageGalleryItem__2V7wJ\",\"ImageGalleryItemImage\":\"HomePage_ImageGalleryItemImage__2D5Yg\",\"link\":\"HomePage_link__skpuU\",\"about\":\"HomePage_about__3cSaf\",\"text\":\"HomePage_text__-HdJ5\",\"rating\":\"HomePage_rating__Vw5Mz HomePage_text__-HdJ5\"};","import s from '../PartOfCard/PartOfCard.module.css';\nimport { Link, useRouteMatch, useLocation } from 'react-router-dom';\nimport slugify from 'slugify';\n\nconst makeSlug = string => slugify(string, { lower: true });\n\nexport default function PartOfCard({ id, title, name, backdrop }) {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n\n  return (\n    <>\n      <li className={s.ImageGalleryItem}>\n        <Link\n          className={s.link}\n          to={{\n            pathname: `${url}/${makeSlug(`${title} ${id}`)}`,\n            state: { from: location },\n          }}\n        >\n          <img\n            className={s.ImageGalleryItemImage}\n            src={\n              backdrop !== null\n                ? `https://image.tmdb.org/t/p/w500${backdrop}`\n                : 'https://dummyimage.com/480x600/2a2a2a/ffffff&text=foto'\n            }\n            alt={title}\n          />\n          <p className={s.text}>\n            {' '}\n            {name} {title}\n          </p>\n        </Link>\n      </li>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"PartOfCard_ImageGalleryItem__Ei-5n\",\"ImageGalleryItemImage\":\"PartOfCard_ImageGalleryItemImage__1V-ct\",\"text\":\"PartOfCard_text__3ik0s\",\"link\":\"PartOfCard_link__2F2tY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3OzRv\",\"SearchForm\":\"Searchbar_SearchForm__1L5JW\",\"SearchFormButton\":\"Searchbar_SearchFormButton__35lmt\",\"SearchFormInput\":\"Searchbar_SearchFormInput__NqYFw\"};","import { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from '../Searchbar/Searchbar.module.css';\n\nexport default function Searchbar({ getMovies }) {\n  const [movies, setMovies] = useState('');\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleQueryChange = query => {\n    history.push({\n      ...location,\n      search: `query=${query}`,\n    });\n  };\n\n  //получение значения input\n  const handleNameChange = e => {\n    setMovies(e.currentTarget.value.toLowerCase());\n  };\n\n  //отправка значения из формы\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (movies.trim() === '') {\n      toast.warn('Fill out the form');\n      return;\n    }\n\n    getMovies(movies);\n    setMovies('');\n    handleQueryChange(movies);\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={movies}\n          onChange={handleNameChange}\n        />\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <BiSearchAlt style={{ marginRight: 8 }} />\n        </button>\n      </form>\n    </header>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as moviesAPI from '../service/home-app';\nimport Loader from '../Loader/Loader';\nimport Searchbar from './Searchbar/Searchbar';\nimport StatusError from '../StatusError/StatusError';\nimport PartOfCard from './PartOfCard/PartOfCard';\nimport s from './HomePage/HomePage.module.css';\n\nexport default function MoviesPage() {\n  const location = useLocation();\n  const [querySearchParams, setQuery] = useState(\n    new URLSearchParams(location.search).get('query'),\n  );\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    if (!querySearchParams) {\n      return;\n    }\n\n    setStatus('pending');\n\n    moviesAPI\n      .fetchMoviesSearch(querySearchParams)\n      .then(newMovies => {\n        if (newMovies.results.length === 0) {\n          <StatusError\n            message={error.message}\n            style={{ textAlign: 'center' }}\n          />;\n        } else {\n          setMovies(newMovies);\n          setStatus('resolved');\n        }\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [querySearchParams]);\n\n  return (\n    <div>\n      <Searchbar getMovies={setQuery} />\n\n      {status === 'idle' && <p style={{ textAlign: 'center' }}>Let's Go!</p>}\n\n      {status === 'pending' && <Loader />}\n\n      {status === 'rejected' && (\n        <StatusError message={error.message} style={{ textAlign: 'center' }} />\n      )}\n\n      {status === 'resolved' && (\n        <>\n          <ul className={s.ItemList}>\n            {movies.results.map(movie => (\n              <PartOfCard\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                name={movie.name}\n                backdrop={movie.backdrop_path}\n              />\n            ))}\n          </ul>\n        </>\n      )}\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n\nMoviesPage.propTypes = {\n  query: PropTypes.string,\n};\n"],"sourceRoot":""}