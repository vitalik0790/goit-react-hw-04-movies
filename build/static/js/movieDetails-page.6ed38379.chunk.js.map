{"version":3,"sources":["service/home-app.js","StatusError/StatusError.js","views/HomePage/HomePage.module.css","views/PartOfCard/PartOfCard.js","views/PartOfCard/PartOfCard.module.css","views/CardOfMovie/CardOfMovie.module.css","views/MovieDetailsPage/MovieDetailsPage.module.css","views/CardOfMovie/CardOfMovie.js","views/Cast/Cast.js","views/Reviews/Reviews.js","views/MovieDetailsPage/MovieDetailsPage.js"],"names":["KEY","BASE_URL","fetchMoviesSearch","name","fetch","then","response","ok","json","fetchMoviesHomePage","fetchMoviesInfo","movie_id","fetchActorsInfo","fetchReviews","StatusError","message","role","module","exports","PartOfCard","string","id","title","backdrop","url","useRouteMatch","location","useLocation","className","s","ImageGalleryItem","link","to","pathname","slugify","lower","state","from","ImageGalleryItemImage","src","alt","text","CardOfMovie","image","overview","part","history","useHistory","btn","type","onClick","push","card","cardAbout","Cast","useState","actors","setActors","error","setError","status","setStatus","movieId","useParams","slug","match","useEffect","moviesAPI","catch","style","textAlign","ItemList","cast","map","actor","profile_path","Reviews","reviews","setReviews","results","length","Promise","reject","Error","content","listStyle","color","MovieDetailsPage","movies","setMovies","path","movieImg","backdrop_path","console","log","newMovies","genres","movie","about","scroll","scrollToBottom","activeClassName","activeLink"],"mappings":"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","file":"static/js/movieDetails-page.6ed38379.chunk.js","sourcesContent":["const KEY = '954177cd68586aaf37f7489ec26d1a8d';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport function fetchMoviesSearch(name) {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${name}&language=en-US&page=1&include_adult=false`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n}\n\nexport function fetchMoviesHomePage() {\n  return fetch(`${BASE_URL}/trending/movie/week?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    },\n  );\n}\n\nexport function fetchMoviesInfo(movie_id) {\n  return fetch(`${BASE_URL}/movie/${movie_id}?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    },\n  );\n}\n\nexport function fetchActorsInfo(movie_id) {\n  return fetch(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}&language=en-US`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n}\n\nexport function fetchReviews(movie_id) {\n  return fetch(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n}\n","import PropTypes from 'prop-types';\n\nexport default function StatusError({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>Oops, {message}</p>\n    </div>\n  );\n}\n\nStatusError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemList\":\"HomePage_ItemList__2nxLd\",\"ImageGalleryItem\":\"HomePage_ImageGalleryItem__2V7wJ\",\"ImageGalleryItemImage\":\"HomePage_ImageGalleryItemImage__2D5Yg\",\"link\":\"HomePage_link__skpuU\",\"about\":\"HomePage_about__3cSaf\",\"text\":\"HomePage_text__-HdJ5\",\"rating\":\"HomePage_rating__Vw5Mz HomePage_text__-HdJ5\"};","import s from '../PartOfCard/PartOfCard.module.css';\nimport { Link, useRouteMatch, useLocation } from 'react-router-dom';\nimport slugify from 'slugify';\n\nconst makeSlug = string => slugify(string, { lower: true });\n\nexport default function PartOfCard({ id, title, name, backdrop }) {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n\n  return (\n    <>\n      <li className={s.ImageGalleryItem}>\n        <Link\n          className={s.link}\n          to={{\n            pathname: `${url}/${makeSlug(`${title} ${id}`)}`,\n            state: { from: location },\n          }}\n        >\n          <img\n            className={s.ImageGalleryItemImage}\n            src={\n              backdrop !== null\n                ? `https://image.tmdb.org/t/p/w500${backdrop}`\n                : 'https://dummyimage.com/480x600/2a2a2a/ffffff&text=foto'\n            }\n            alt={title}\n          />\n          <p className={s.text}>\n            {' '}\n            {name} {title}\n          </p>\n        </Link>\n      </li>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"PartOfCard_ImageGalleryItem__Ei-5n\",\"ImageGalleryItemImage\":\"PartOfCard_ImageGalleryItemImage__1V-ct\",\"text\":\"PartOfCard_text__3ik0s\",\"link\":\"PartOfCard_link__2F2tY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"CardOfMovie_text__3HjiP\",\"title\":\"CardOfMovie_title__26oNM CardOfMovie_text__3HjiP\",\"btn\":\"CardOfMovie_btn__3aI_D\",\"card\":\"CardOfMovie_card__3asBH\",\"cardAbout\":\"CardOfMovie_cardAbout__3bJQy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"MovieDetailsPage_link__1o3ho\",\"activeLink\":\"MovieDetailsPage_activeLink__24Hc7 MovieDetailsPage_link__1o3ho\",\"about\":\"MovieDetailsPage_about__2hEpO\"};","import { useLocation, useHistory } from 'react-router-dom';\nimport s from '../CardOfMovie/CardOfMovie.module.css';\n\nexport default function CardOfMovie({ title, image, overview, part }) {\n  const location = useLocation();\n  const history = useHistory();\n\n  const onGoBack = () => {\n    history.push(location?.state?.from ?? '/movies');\n  };\n\n  return (\n    <>\n      <button className={s.btn} type=\"button\" onClick={onGoBack}>\n        Back\n      </button>\n\n      <section className={s.card}>\n        <img src={image} alt={title} />\n        <div className={s.cardAbout}>\n          <h2 className={s.title}>{title}</h2>\n          <p className={s.text}>\n            {part[0]} <br />\n            {part[1]}\n          </p>\n          <p className={s.text}>{overview}</p>\n        </div>\n      </section>\n    </>\n  );\n}\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as moviesAPI from '../../service/home-app';\nimport StatusError from '../../StatusError/StatusError';\nimport s from '../HomePage/HomePage.module.css';\nimport PartOfCard from '../PartOfCard/PartOfCard';\n\nexport default function Cast() {\n  const [actors, setActors] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const { slug } = useParams();\n  const movieId = slug.match(/[a-zA-Z0-9]+$/)[0];\n\n  useEffect(() => {\n    setStatus('pending');\n\n    moviesAPI\n      .fetchActorsInfo(movieId)\n      .then(actors => {\n        setActors(actors);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      {status === 'rejected' && (\n        <StatusError message={error.message} style={{ textAlign: 'center' }} />\n      )}\n\n      {status === 'resolved' && (\n        <>\n          <ul className={s.ItemList}>\n            {actors.cast.map(actor => (\n              <PartOfCard\n                backdrop={actor.profile_path}\n                name={actor.name}\n                key={actor.id}\n              />\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as moviesAPI from '../../service/home-app';\nimport StatusError from '../../StatusError/StatusError';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const { slug } = useParams();\n  const movieId = slug.match(/[a-zA-Z0-9]+$/)[0];\n\n  useEffect(() => {\n    setStatus('pending');\n\n    moviesAPI\n      .fetchReviews(movieId)\n      .then(reviews => {\n        if (reviews.results.length) {\n          setReviews(reviews);\n          setStatus('resolved');\n          return;\n        }\n        return Promise.reject(new Error('Sorry. No information on request'));\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      {status === 'rejected' && (\n        <StatusError message={error.message} style={{ textAlign: 'center' }} />\n      )}\n\n      {status === 'resolved' && (\n        <>\n          <ul>\n            {reviews.results.map(({ id, content }) => (\n              <li key={id} style={{ listStyle: 'none' }}>\n                <p style={{ color: 'white' }}>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n","import {\n  Route,\n  useParams,\n  useRouteMatch,\n  NavLink,\n  useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { animateScroll as scroll } from 'react-scroll';\nimport * as moviesAPI from '../../service/home-app';\nimport StatusError from '../../StatusError/StatusError';\nimport CardOfMovie from '../CardOfMovie/CardOfMovie';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\nimport s from '../MovieDetailsPage/MovieDetailsPage.module.css';\n\nexport default function MovieDetailsPage() {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const { url, path } = useRouteMatch();\n  const { slug } = useParams();\n  const movieId = slug.match(/[a-zA-Z0-9]+$/)[0];\n  const movieImg = `https://image.tmdb.org/t/p/w500/${movies.backdrop_path}`;\n\n  console.log();\n\n  useEffect(() => {\n    setStatus('pending');\n\n    moviesAPI\n      .fetchMoviesInfo(movieId)\n      .then(newMovies => {\n        setMovies(newMovies);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      {status === 'rejected' && (\n        <StatusError message={error.message} style={{ textAlign: 'center' }} />\n      )}\n      {status === 'resolved' && (\n        <>\n          <CardOfMovie\n            title={movies.title}\n            image={\n              movies.backdrop_path !== null\n                ? movieImg\n                : 'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Foto'\n            }\n            overview={movies.overview}\n            part={movies.genres.map(movie => movie.name)}\n          />\n          <section className={s.about}>\n            <NavLink\n              onClick={() => {\n                scroll.scrollToBottom();\n              }}\n              to={{\n                pathname: `${url}/cast`,\n                state: { from: location },\n              }}\n              className={s.link}\n              activeClassName={s.activeLink}\n            >\n              Cast\n            </NavLink>\n            <NavLink\n              onClick={() => {\n                scroll.scrollToBottom();\n              }}\n              to={{\n                pathname: `${url}/reviews`,\n                state: { from: location },\n              }}\n              className={s.link}\n              activeClassName={s.activeLink}\n            >\n              Reviews\n            </NavLink>\n          </section>\n        </>\n      )}\n\n      <Route path={`${path}/cast`}>\n        <Cast />\n      </Route>\n\n      <Route path={`${path}/reviews`}>\n        <Reviews />\n      </Route>\n    </div>\n  );\n}\n"],"sourceRoot":""}